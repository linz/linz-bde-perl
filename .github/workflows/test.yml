name: Test

on:
  push:
    branches:
      - master
      - packagecloud
      - 'release-*'
    tags-ignore:
      - 'debian/*'
  pull_request:
    branches:
      - '*'
  schedule:
    - cron: '0 12 * * 0'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04

    steps:
      - name: Check out repository
        uses: actions/checkout@v2.4.0

      - name: Install Nix
        uses: cachix/install-nix-action@v16

      - name: Run pre-commit hooks
        run: nix-shell --pure --run 'pre-commit run --all-files'

  test-source:
    name: Test source Perl ${{ matrix.perl }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        perl:
          - '5.34'
          - '5.32'
          - '5.30'
          - '5.28'
        os:
          - ubuntu-18.04
          - ubuntu-20.04
          - ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2.4.0

      - name: Setup perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl }}

      - name: Install debian dependencies
        run: |
          sudo -E apt-get --assume-yes -qq install --no-install-recommends \
              cpanminus \
              debhelper \
              fakeroot \
              libfile-which-perl \
              libtest-exception-perl

      - name: Install CPAN dependencies
        run: |
          cpanm \
              File::Which \
              Module::Build \
              Test::Cmd \
              Test::Exception

      - name: Build perl
        run: ./configure.bash

      - name: Build
        run: make

      - name: Test build
        run: make test

      - name: Buld distribution
        run: make dist

      - name: Run distribution checks
        run: make distcheck

      - name: Run distribution test
        run: make disttest

  test-package:
    name: Test packaging Perl ${{ matrix.perl }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        perl:
          - '5.34'
          - '5.32'
          - '5.30'
          - '5.28'
        include:
          - os: ubuntu-18.04
            release: bionic
          - os: ubuntu-20.04
            release: focal
          - os: ubuntu-latest
            release: focal

    steps:
      - name: Check out repository
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Setup perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl }}

      - name: Get release codename
        id: distro
        run: echo "::set-output name=codename::$(lsb_release --codename --short)"

      - name: Enable fetching packages from packagecloud test repository
        run: |
          curl -Ls https://packagecloud.io/linz/test/gpgkey | sudo apt-key add -
          echo "deb https://packagecloud.io/linz/test/ubuntu/ ${{ steps.distro.outputs.codename }} main" | sudo tee /etc/apt/sources.list.d/linz-test.list

      - name: Enable fetching packages from packagecloud prod repository
        run: |
          curl -Ls https://packagecloud.io/linz/prod/gpgkey | sudo apt-key add -
          echo "deb https://packagecloud.io/linz/prod/ubuntu/ ${{ steps.distro.outputs.codename }} main" | sudo tee /etc/apt/sources.list.d/linz-prod.list

      - name: Update package database
        run: sudo apt-get update

      - name: Install debian dependencies
        run: |
          sudo -E apt-get --assume-yes -qq install --no-install-recommends \
              cpanminus \
              debhelper \
              fakeroot \
              libfile-which-perl \
              libtest-exception-perl \
              linz-bde-copy

      - name: Install CPAN dependencies
        run: |
          cpanm \
              File::Which \
              Module::Build \
              Test::Cmd \
              Test::Exception

      - name: Build perl
        run: ./configure.bash

      - name: Build
        run: make

      - name: Test build
        run: make test

      - name: Buld distribution
        run: make dist

      - name: Run distribution checks
        run: make distcheck

      - name: Run distribution test
        run: make disttest

      - name: Build packages for all supported versions
        uses: linz/linz-software-repository@v8
        with:
          release: ${{ matrix.release }}

      - name: Install package
        run: sudo dpkg --install build-area/liblinz-bde-perl*.deb

  package:
    needs:
      - lint
      - test-package
      - test-source
    name: Package for Debian
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        distro: [bionic, focal]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0 # Enable the changelog generator to check out previous branch

      - name: Determine packagecloud publication target
        run: |
          # TODO: it would be nice to turn this into a single-liner in
          #       github-action syntax
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub event_name: ${{ github.event_name }}"
          PACKAGECLOUD_REPOSITORY=
          if test "${{ github.event_name }}" = 'push'; then
            if expr "${{ github.ref }}" : "refs/tags/" > /dev/null; then
              PACKAGECLOUD_REPOSITORY=test
              git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
            elif test "${{ github.ref }}" = 'refs/heads/packagecloud' \
                   -o "${{ github.ref }}" = 'refs/heads/master'
            then
              PACKAGECLOUD_REPOSITORY=dev
            fi
          fi
          echo "PACKAGECLOUD_REPOSITORY=$PACKAGECLOUD_REPOSITORY" | tee -a $GITHUB_ENV

      - name: Build and upload to Packagecloud
        uses: linz/linz-software-repository@v8
        with:
          release: ${{ matrix.distro }}
          packagecloud_token: ${{ secrets.LINZCI_PACKAGECLOUD_TOKEN }}
          packagecloud_repository: ${{ env.PACKAGECLOUD_REPOSITORY }}
